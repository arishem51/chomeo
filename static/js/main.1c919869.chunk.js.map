{"version":3,"sources":["logo.svg","Component/ButtonChoMeo.js","Component/ListDog.js","Component/ListImg.js","Component/Container.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonChoMeo","props","state","setState","handleClick","className","onClick","ListDog","useState","list","setList","useEffect","getList","axios","get","then","res","data","message","catch","err","console","log","style","display","flexWrap","justifyContent","dataLength","length","next","hasMore","map","item","index","width","height","margin","alt","src","ListImg","url","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uLAAe,I,mBCEA,SAASA,EAAaC,GACjC,IAAOC,EAAkBD,EAAlBC,MAAMC,EAAYF,EAAZE,SACPC,EAAc,WAChBD,GAAUD,IAEd,OACI,qBAAKG,UAAU,YAAf,SACKH,EAAQ,wBAAQI,QAASF,EAAjB,oBAA6C,wBAAQE,QAASF,EAAjB,sB,mCCLnD,SAASG,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNC,MACD,IACH,IAAMA,EAAU,WACZC,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GACzDN,EAAQ,GAAD,mBAAKD,GAAL,YAAcO,EAAIC,KAAKC,cAC/BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAIpB,OACI,qBAAKf,UAAU,UAAf,SACI,cAAC,IAAD,CACIkB,MAAO,CAACC,QAAQ,OAAOC,SAAS,OAAOC,eAAe,UACtDC,WAAYlB,EAAKmB,OACjBC,KAAMjB,EACNkB,SAAS,EAJb,gBAMKrB,QANL,IAMKA,OANL,EAMKA,EAAMsB,KAAI,SAACC,EAAMC,GAClB,OAAO,qBAAKV,MAAO,CAAEW,MAAO,IAAKC,OAAQ,IAAKC,OAAQ,WAAaC,IAAI,MAAkBC,IAAKN,GAAZC,UCtBnF,SAASM,EAAQtC,GAC5B,MAAwBO,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNC,MACD,IACH,IAAMA,EAAU,WACZC,IAAMC,IAAI,6GAA6GC,MAAK,SAAAC,GACxHN,EAAQ,GAAD,mBAAKD,GAAL,YAAcO,EAAIC,WAC1BE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAIpB,OACI,qBAAKf,UAAU,UAAf,SACI,cAAC,IAAD,CACIkB,MAAO,CAACC,QAAQ,OAAOC,SAAS,OAAOC,eAAe,UACtDC,WAAYlB,EAAKmB,OACjBC,KAAMjB,EACNkB,SAAS,EAJb,gBAMKrB,QANL,IAMKA,OANL,EAMKA,EAAMsB,KAAI,SAACC,EAAMC,GAClB,OAAO,qBAAKV,MAAO,CAAEW,MAAO,IAAKC,OAAQ,IAAKC,OAAQ,WAAaC,IAAI,MAAkBC,IAAKN,EAAKQ,KAAjBP,UCrBnF,SAASQ,IACpB,MAAyBjC,oBAAS,GAAlC,mBAAON,EAAP,KAAaC,EAAb,KAEA,OACI,sBAAKE,UAAU,YAAf,UACKH,EAAQ,cAACqC,EAAD,IAAsB,cAAChC,EAAD,IAC/B,cAACP,EAAD,CAAcE,MAAOA,EAAOC,SAAUA,OCCnCuC,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAACoC,EAAD,OCKSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1c919869.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport default function ButtonChoMeo(props) {\r\n    const {state,setState} = props\r\n    const handleClick = ()=>{\r\n        setState(!state)\r\n    }\r\n    return (\r\n        <div className='btnChoMeo'>\r\n            {state ? <button onClick={handleClick}>Mèo</button> : <button onClick={handleClick}>Chó</button>}\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nexport default function ListDog() {\r\n    const [list, setList] = useState([]);\r\n    useEffect(() => {\r\n        getList();\r\n    }, [])\r\n    const getList = () => {\r\n        axios.get('https://dog.ceo/api/breeds/image/random/20').then(res => {\r\n            setList([...list, ...res.data.message])\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className='listImg' >\r\n            <InfiniteScroll\r\n                style={{display:'flex',flexWrap:'wrap',justifyContent:'center'}}\r\n                dataLength={list.length} //This is important field to render the next data\r\n                next={getList}\r\n                hasMore={true}\r\n            >\r\n                {list?.map((item, index) => {\r\n                return <img style={{ width: 250, height: 250, margin: '5px 5px' }} alt='dog' key={index} src={item}>\r\n                </img>\r\n            })}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nexport default function ListImg(props) {\r\n    const [list, setList] = useState([]);\r\n    useEffect(() => {\r\n        getList();\r\n    }, [])\r\n    const getList = () => {\r\n        axios.get('https://api.thecatapi.com/v1/images/search?limit=20&size=300?api_key=f6809700-cf92-44c9-8dd3-b41c902c1c7c').then(res => {\r\n            setList([...list, ...res.data])\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className='listImg' >\r\n            <InfiniteScroll\r\n                style={{display:'flex',flexWrap:'wrap',justifyContent:'center'}}\r\n                dataLength={list.length} //This is important field to render the next data\r\n                next={getList}\r\n                hasMore={true}\r\n            >\r\n                {list?.map((item, index) => {\r\n                return <img style={{ width: 250, height: 250, margin: '5px 5px' }} alt='cat' key={index} src={item.url}>\r\n                </img>\r\n            })}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ButtonChoMeo from './ButtonChoMeo';\r\nimport ListDog from './ListDog';\r\nimport ListImg from './ListImg';\r\n\r\nexport default function Container() {\r\n    const [state,setState] = useState(true); //true la meo , false la cho\r\n\r\n    return (\r\n        <div className='container'>\r\n            {state ? <ListImg></ListImg> : <ListDog></ListDog>}\r\n            <ButtonChoMeo state={state} setState={setState}></ButtonChoMeo>\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Container from './Component/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container></Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}